Bottom: db7045c5359d7c1217bef7e4f2cbed3e0d060b09
Top:    35f384b602b56188382fb57fc7834ce82df0edb8
Author: Ben Greear <greearb@candelatech.com>
Date:   2016-06-04 15:42:56 -0700

Refresh of pktgen-copy-from-3-19-kernel

---

diff --git a/net/core/pktgen.c b/net/core/pktgen.c
index a86b133..c730d8c 100644
--- a/net/core/pktgen.c
+++ b/net/core/pktgen.c
@@ -3199,7 +3199,7 @@ static void pg_do_csum(struct pktgen_dev *pkt_dev, struct sk_buff *skb) {
 		struct tcphdr *th = tcp_hdr(skb);
 		unsigned int prefix_len = (unsigned int)((unsigned char*)th - skb->data);
 
-		if (odev->features & NETIF_F_V4_CSUM) {
+		if (odev->features & (NETIF_F_HW_CSUM | NETIF_F_IP_CSUM)) {
 			skb->ip_summed = CHECKSUM_PARTIAL;
 			/* Subtract out IP hdr and before */
 			th->check = ~tcp_v4_check(skb->len - prefix_len, iph->saddr, iph->daddr, 0);
@@ -3216,7 +3216,7 @@ static void pg_do_csum(struct pktgen_dev *pkt_dev, struct sk_buff *skb) {
 		//       th->check, skb->csum_start, skb->csum_offset, skb->ip_summed, iph->saddr, iph->daddr,
 		//       skb->len, skb_headroom(skb), (unsigned int)((unsigned char*)th - skb->data), prefix_len);
 	} else {
-		if (odev->features & NETIF_F_V4_CSUM) {
+		if (odev->features & (NETIF_F_HW_CSUM | NETIF_F_IP_CSUM)) {
 			skb->ip_summed = CHECKSUM_PARTIAL;
 			skb->csum = 0;
 			udp4_hwcsum(skb, iph->saddr, iph->daddr);
@@ -3298,7 +3298,7 @@ static struct sk_buff *fill_packet_ipv4(struct net_device *odev,
 		*vlan_encapsulated_proto = htons(ETH_P_IP);
 	}
 
-	skb_set_mac_header(skb, 0);
+	skb_reset_mac_header(skb);
 	skb_set_network_header(skb, skb->len);
 	iph = (struct iphdr *) skb_put(skb, sizeof(struct iphdr));
 
@@ -3444,7 +3444,7 @@ static struct sk_buff *fill_packet_ipv6(struct net_device *odev,
 		*vlan_encapsulated_proto = htons(ETH_P_IPV6);
 	}
 
-	skb_set_mac_header(skb, 0);
+	skb_reset_mac_header(skb);
 	skb_set_network_header(skb, skb->len);
 	iph = (struct ipv6hdr *) skb_put(skb, sizeof(struct ipv6hdr));
 
@@ -3494,7 +3494,7 @@ static struct sk_buff *fill_packet_ipv6(struct net_device *odev,
 
 	if (!(pkt_dev->flags & F_UDPCSUM)) {
 		skb->ip_summed = CHECKSUM_NONE;
-	} else if (odev->features & NETIF_F_V6_CSUM) {
+	} else if (odev->features & (NETIF_F_HW_CSUM | NETIF_F_IPV6_CSUM)) {
 		skb->ip_summed = CHECKSUM_PARTIAL;
 		skb->csum_start = skb_transport_header(skb) - skb->head;
 		skb->csum_offset = offsetof(struct udphdr, check);
@@ -4281,10 +4281,6 @@ static void pktgen_xmit(struct pktgen_dev *pkt_dev, u64 now)
 			}
 			pkt_dev->next_tx_ns = getRelativeCurNs() + burst_sofar_ns;
 			break;
-		case NETDEV_TX_LOCKED:
-			cpu_relax();
-			goto retry_now;
-
 		case NET_XMIT_DROP: /* skb has been consumed if we get these next 3 */
 			pkt_dev->xmit_dropped++;
 			goto retry_next_time;
