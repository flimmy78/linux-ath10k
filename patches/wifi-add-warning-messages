Bottom: e71f8da629ee9d397d358cd5d14c5233606c7337
Top:    3f962095baa092ca4fa554ecf821f7801b3ed0b1
Author: Ben Greear <greearb@candelatech.com>
Date:   2016-04-21 13:15:50 -0700

wifi: Add warning messages about why registration fails.

Signed-off-by: Ben Greear <greearb@candelatech.com>


---

diff --git a/net/mac80211/main.c b/net/mac80211/main.c
index 7ee91d6..76eb5f1 100644
--- a/net/mac80211/main.c
+++ b/net/mac80211/main.c
@@ -809,8 +809,10 @@ int ieee80211_register_hw(struct ieee80211_hw *hw)
 
 	if (ieee80211_hw_check(hw, QUEUE_CONTROL) &&
 	    (local->hw.offchannel_tx_hw_queue == IEEE80211_INVAL_HW_QUEUE ||
-	     local->hw.offchannel_tx_hw_queue >= local->hw.queues))
+	     local->hw.offchannel_tx_hw_queue >= local->hw.queues)) {
+		pr_err("queue-ctrl mismatch.\n");
 		return -EINVAL;
+	}
 
 	if ((hw->wiphy->features & NL80211_FEATURE_TDLS_CHANNEL_SWITCH) &&
 	    (!local->ops->tdls_channel_switch ||
@@ -819,8 +821,10 @@ int ieee80211_register_hw(struct ieee80211_hw *hw)
 		return -EOPNOTSUPP;
 
 #ifdef CONFIG_PM
-	if (hw->wiphy->wowlan && (!local->ops->suspend || !local->ops->resume))
+	if (hw->wiphy->wowlan && (!local->ops->suspend || !local->ops->resume)) {
+		pr_err("wowlan mismatch.\n");
 		return -EINVAL;
+	}
 #endif
 
 	if (!local->use_chanctx) {
@@ -829,8 +833,10 @@ int ieee80211_register_hw(struct ieee80211_hw *hw)
 
 			comb = &local->hw.wiphy->iface_combinations[i];
 
-			if (comb->num_different_channels > 1)
+			if (comb->num_different_channels > 1) {
+				pr_err("num-diff-channels: %d > 1\n", comb->num_different_channels);
 				return -EINVAL;
+			}
 		}
 	} else {
 		/*
@@ -838,8 +844,10 @@ int ieee80211_register_hw(struct ieee80211_hw *hw)
 		 * because there's no clear definition of which channel WDS
 		 * type interfaces use
 		 */
-		if (local->hw.wiphy->interface_modes & BIT(NL80211_IFTYPE_WDS))
+		if (local->hw.wiphy->interface_modes & BIT(NL80211_IFTYPE_WDS)) {
+			pr_err("wds mismatch\n");
 			return -EINVAL;
+		}
 
 		/* DFS is not supported with multi-channel combinations yet */
 		for (i = 0; i < local->hw.wiphy->n_iface_combinations; i++) {
@@ -848,8 +856,10 @@ int ieee80211_register_hw(struct ieee80211_hw *hw)
 			comb = &local->hw.wiphy->iface_combinations[i];
 
 			if (comb->radar_detect_widths &&
-			    comb->num_different_channels > 1)
+			    comb->num_different_channels > 1) {
+				pr_err("dfs multi-channel mismatch\n");
 				return -EINVAL;
+			}
 		}
 	}
 
@@ -857,8 +867,10 @@ int ieee80211_register_hw(struct ieee80211_hw *hw)
 	feature_whitelist = NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM |
 			    NETIF_F_HW_CSUM | NETIF_F_SG | NETIF_F_HIGHDMA |
 			    NETIF_F_GSO_SOFTWARE | NETIF_F_RXCSUM;
-	if (WARN_ON(hw->netdev_features & ~feature_whitelist))
+	if (WARN_ON(hw->netdev_features & ~feature_whitelist)) {
+		pr_err("whitelist mismatch\n");
 		return -EINVAL;
+	}
 
 	if (hw->max_report_rates == 0)
 		hw->max_report_rates = hw->max_rates;
@@ -927,8 +939,10 @@ int ieee80211_register_hw(struct ieee80211_hw *hw)
 
 		for (j = 0; j < c->n_limits; j++)
 			if ((c->limits[j].types & BIT(NL80211_IFTYPE_ADHOC)) &&
-			    c->limits[j].max > 1)
+			    c->limits[j].max > 1) {
+				pr_err("n-limits[%i][%i] mismatch: %d, IBSS\n", i, j, c->limits[j].max);
 				return -EINVAL;
+			}
 	}
 
 	local->int_scan_req = kzalloc(sizeof(*local->int_scan_req) +
@@ -960,6 +974,7 @@ int ieee80211_register_hw(struct ieee80211_hw *hw)
 	} else if (ieee80211_hw_check(&local->hw, SIGNAL_UNSPEC)) {
 		local->hw.wiphy->signal_type = CFG80211_SIGNAL_TYPE_UNSPEC;
 		if (hw->max_signal <= 0) {
+			pr_err("max_signal: %d < 0\n", hw->max_signal);
 			result = -EINVAL;
 			goto fail_wiphy_register;
 		}
diff --git a/net/wireless/core.c b/net/wireless/core.c
index a9ad3a9..c38f5db 100644
--- a/net/wireless/core.c
+++ b/net/wireless/core.c
@@ -526,8 +526,11 @@ static int wiphy_verify_combinations(struct wiphy *wiphy)
 				return -EINVAL;
 			all_iftypes |= types;
 
-			if (WARN_ON(!c->limits[j].max))
+			if (WARN_ON(!c->limits[j].max)) {
+				pr_err("comb[%i] limits[%i] has bad max: %d\n",
+				       i, j, c->limits[j].max);
 				return -EINVAL;
+			}
 
 			/* Shouldn't list software iftypes in combinations! */
 			if (WARN_ON(wiphy->software_iftypes & types))
