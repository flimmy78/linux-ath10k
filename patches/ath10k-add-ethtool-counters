Bottom: f23c72bc9eebf28666dbd56f685eda3e883f12b5
Top:    13d9758f906939f705cddf273a7ee18cb68c37b0
Author: Ben Greear <greearb@candelatech.com>
Date:   2015-08-24 14:54:58 -0700

ath10k: Add ethtool counters for tx-ok, tx-noack, and tx-discard status.

These new counters are counting tx status results as reported by the
firmware.  TX-OK does not appear to report beacons, and maybe retries.

Signed-off-by: Ben Greear <greearb@candelatech.com>


---

diff --git a/drivers/net/wireless/ath/ath10k/core.h b/drivers/net/wireless/ath/ath10k/core.h
index 42f5335..8282f53 100644
--- a/drivers/net/wireless/ath/ath10k/core.h
+++ b/drivers/net/wireless/ath/ath10k/core.h
@@ -492,8 +492,16 @@ struct ath10k_debug {
 
 	struct ath10k_fw_crash_data *fw_crash_data;
 
-	u64 tx_bytes; /* counter, firmware does not offer this stat */
-	u64 rx_bytes; /* counter, firmware does not offer this stat */
+	/* These counters are kept in software. */
+	u64 rx_bytes; /* counter, total received bytes */
+
+	u32 tx_ok; /* counter, OK tx status count. */
+	u32 tx_noack; /* counter, no-ack tx status count. */
+	u32 tx_discard; /* counter, discard tx status count. */
+	u64 tx_ok_bytes;
+	u64 tx_noack_bytes;
+	u64 tx_discard_bytes;
+	u64 tx_bytes; /* counter, total sent to firmware */
 };
 
 enum ath10k_state {
diff --git a/drivers/net/wireless/ath/ath10k/debug.c b/drivers/net/wireless/ath/ath10k/debug.c
index 8bb4c0f..3128ce0 100644
--- a/drivers/net/wireless/ath/ath10k/debug.c
+++ b/drivers/net/wireless/ath/ath10k/debug.c
@@ -1766,9 +1766,11 @@ exit:
 
 /* This generally cooresponds to the debugfs fw_stats file */
 static const char ath10k_gstrings_stats[][ETH_GSTRING_LEN] = {
-	"tx_pkts_nic",
-	"tx_bytes_nic", /* from driver, firmware does not keep this stat. */
-	"rx_pkts_nic",
+	"tx_hw_reaped", /* from firmware, tx-pkts count */
+	"tx_pkts_nic", /* from driver, tx-ok pkts */
+	"tx_bytes_nic", /* from driver, tx-ok bytes */
+	"tx_bytes_to_fw", /* sent to firmware, counts all failures */
+	"rx_pkts_nic", /* From firmware...maybe should be from driver for symmetry? */
 	"rx_bytes_nic", /* from driver, firmware does not keep this stat. */
 	"d_noise_floor",
 	"d_cycle_count", /* this is duty cycle counter, basically channel-time. 88MHz clock */
@@ -1795,6 +1797,10 @@ static const char ath10k_gstrings_stats[][ETH_GSTRING_LEN] = {
 	"d_tx_excessive_retries",
 	"d_tx_hw_rate",
 	"d_tx_dropped_sw_retries",
+	"d_tx_noack", /* reported by driver */
+	"d_tx_noack_bytes", /* reported by driver */
+	"d_tx_discard", /* reported by driver */
+	"d_tx_discard_bytes", /* reported by driver */
 	"d_tx_illegal_rate",
 	"d_tx_continuous_xretries",
 	"d_tx_timeout",
@@ -1875,6 +1881,8 @@ void ath10k_debug_get_et_stats(struct ieee80211_hw *hw,
 		d_flags |= 0x1;
 
 	data[i++] = pdev_stats->hw_reaped; /* ppdu reaped */
+	data[i++] = ar->debug.tx_ok;
+	data[i++] = ar->debug.tx_ok_bytes;
 	data[i++] = ar->debug.tx_bytes;
 	data[i++] = pdev_stats->htt_mpdus;
 	data[i++] = ar->debug.rx_bytes;
@@ -1903,6 +1911,10 @@ void ath10k_debug_get_et_stats(struct ieee80211_hw *hw,
 	data[i++] = pdev_stats->tx_ko;
 	data[i++] = pdev_stats->data_rc;
 	data[i++] = pdev_stats->sw_retry_failure;
+	data[i++] = ar->debug.tx_noack;
+	data[i++] = ar->debug.tx_noack_bytes;
+	data[i++] = ar->debug.tx_discard;
+	data[i++] = ar->debug.tx_discard_bytes;
 	data[i++] = pdev_stats->illgl_rate_phy_err;
 	data[i++] = pdev_stats->pdev_cont_xretry;
 	data[i++] = pdev_stats->pdev_tx_timeout;
diff --git a/drivers/net/wireless/ath/ath10k/txrx.c b/drivers/net/wireless/ath/ath10k/txrx.c
index b06114c..43df061 100644
--- a/drivers/net/wireless/ath/ath10k/txrx.c
+++ b/drivers/net/wireless/ath/ath10k/txrx.c
@@ -96,6 +96,7 @@ int ath10k_txrx_tx_unref(struct ath10k_htt *htt,
 	struct ath10k_skb_cb *skb_cb;
 	struct ath10k_txq *artxq;
 	struct sk_buff *msdu;
+	bool tx_failed = false;
 
 	ath10k_dbg(ar, ATH10K_DBG_HTT,
 		   "htt tx completion msdu_id %u status %d\n",
@@ -138,6 +139,10 @@ int ath10k_txrx_tx_unref(struct ath10k_htt *htt,
 	trace_ath10k_txrx_tx_unref(ar, tx_done->msdu_id);
 
 	if (tx_done->status == HTT_TX_COMPL_STATE_DISCARD) {
+#ifdef CONFIG_ATH10K_DEBUG
+		ar->debug.tx_discard++;
+		ar->debug.tx_discard_bytes += msdu->len;
+#endif
 		ieee80211_free_txskb(htt->ar->hw, msdu);
 		return 0;
 	}
@@ -146,7 +151,7 @@ int ath10k_txrx_tx_unref(struct ath10k_htt *htt,
 		info->flags |= IEEE80211_TX_STAT_ACK;
 
 	if (tx_done->status == HTT_TX_COMPL_STATE_NOACK)
-		info->flags &= ~IEEE80211_TX_STAT_ACK;
+		tx_failed = true;
 
 	if ((tx_done->status == HTT_TX_COMPL_STATE_ACK) &&
 	    (info->flags & IEEE80211_TX_CTL_NO_ACK))
@@ -159,16 +164,32 @@ int ath10k_txrx_tx_unref(struct ath10k_htt *htt,
 		if (test_bit(ATH10K_FW_FEATURE_HAS_TXSTATUS_NOACK,
 			     ar->running_fw->fw_file.fw_features)) {
 			/* Deal with tx-completion status */
-			if ((tx_done->tx_rate_flags & 0x3) == ATH10K_RC_FLAG_XRETRY)
-				info->flags &= ~IEEE80211_TX_STAT_ACK;
+			if ((tx_done->tx_rate_flags & 0x3) == ATH10K_RC_FLAG_XRETRY) {
+#ifdef CONFIG_ATH10K_DEBUG
+				ar->debug.tx_noack++;
+				ar->debug.tx_noack_bytes += msdu->len;
+#endif
+				tx_failed = true;
+			}
 			/* TODO:  Report drops differently. */
 			if ((tx_done->tx_rate_flags & 0x3) == ATH10K_RC_FLAG_DROP)
-				info->flags &= ~IEEE80211_TX_STAT_ACK;
+				tx_failed = true;
 		}
 	} else {
 		info->status.rates[0].idx = -1;
 	}
 
+
+	if (tx_failed) {
+		info->flags &= ~IEEE80211_TX_STAT_ACK;
+	}
+#ifdef CONFIG_ATH10K_DEBUG
+	else {
+		ar->debug.tx_ok++;
+		ar->debug.tx_ok_bytes += msdu->len;
+	}
+#endif
+
 	ieee80211_tx_status(htt->ar->hw, msdu);
 	/* we do not own the msdu anymore */
 	return 0;
